@model InteliRoute.Models.ViewModels.MailboxSetupVm
@{
    ViewData["Title"] = "Email Fetching";
}

<h2 class="mb-3">@ViewData["Title"]</h2>

@if (TempData["ok"] is string ok && !string.IsNullOrWhiteSpace(ok))
{
    <div class="alert alert-success">@ok</div>
}
@if (TempData["err"] is string err && !string.IsNullOrWhiteSpace(err))
{
    <div class="alert alert-danger">@err</div>
}

<div class="card mb-4">
    <div class="card-header">Add mailbox & grant Gmail consent</div>
    <div class="card-body">
        <form asp-action="GrantConsent" method="post" class="row g-3">
            @Html.AntiForgeryToken()
            <div class="col-md-6">
                <label asp-for="Email" class="form-label">Email</label>
                <input asp-for="Email" class="form-control" placeholder="you@company.com" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="col-md-6 d-flex align-items-end">
                <button type="submit" class="btn btn-dark">Grant Consent</button>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header">Configured mailboxes</div>
    <div class="card-body p-0">
        @if (Model.Mailboxes == null || Model.Mailboxes.Count == 0)
        {
            <div class="p-3 text-muted">No mailboxes yet. Add one above.</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover mb-0 align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Address</th>
                            <th>Status</th>
                            <th style="width:280px;">Frequency</th>
                            <th>Last sync (UTC)</th>
                            <th class="text-end" style="width:260px;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var box in Model.Mailboxes.OrderBy(b => b.Address))
                        {
                            <tr>
                                <td>@box.Address</td>
                                <td>
                                    @if (box.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Disabled</span>
                                    }
                                </td>
                                <td>
                                    <form asp-action="SetFrequency" method="post" class="d-flex gap-2">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="mailboxId" value="@box.Id" />
                                        <select name="minutes" class="form-select">
                                            <option value="1" selected="@(box.PollIntervalSec==60)">Every 1 minute</option>
                                            <option value="5" selected="@(box.PollIntervalSec==300)">Every 5 minutes</option>
                                            <option value="15" selected="@(box.PollIntervalSec==900)">Every 15 minutes</option>
                                            <option value="30" selected="@(box.PollIntervalSec==1800)">Every 30 minutes</option>
                                            <option value="60" selected="@(box.PollIntervalSec==3600)">Every 1 hour</option>
                                        </select>
                                        <button type="submit" class="btn btn-outline-secondary">Save</button>
                                    </form>
                                </td>
                                <td>@(box.LastSyncUtc?.ToString("u") ?? "—")</td>
                                <td class="text-end">
                                    <div class="d-flex justify-content-end gap-2">
                                        <form asp-action="ManualFetch" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="mailboxId" value="@box.Id" />
                                            <button type="submit" class="btn btn-outline-primary">Manual Fetch</button>
                                        </form>

                                        @if (box.IsActive)
                                        {
                                            <form asp-action="Disable" method="post">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="mailboxId" value="@box.Id" />
                                                <button type="submit" class="btn btn-outline-danger">Disable</button>
                                            </form>
                                        }
                                        else
                                        {
                                            <span class="text-muted small d-inline-flex align-items-center">Disabled</span>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
